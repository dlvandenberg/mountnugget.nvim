local Util = require("mountnugget.util")

local M = {}

---@type mountnugget.HighlightsFn
function M.get(c, opts)
  local result = {
    ["@annotation"] = "PreProc",
    ["@attribute"] = { fg = c.arylide },
    ["@boolean"] = "Boolean",
    ["@character"] = "Character",
    ["@character.print"] = "SpecialChar",
    ["@character.special"] = "SpecialChar",
    ["@comment"] = "Comment",
    ["@comment.error"] = { fg = c.error },
    ["@comment.hint"] = { fg = c.hint },
    ["@comment.info"] = { fg = c.info },
    ["@comment.note"] = { fg = c.hint },
    ["@comment.todo"] = { fg = c.todo },
    ["@comment.warning"] = { fg = c.warning },
    ["@constant"] = "Constant",
    ["@constant.builtin"] = { fg = c.teal },
    ["@constant.macro"] = "Define",
    ["@constructor"] = { fg = c.khaki },
    ["@constructor.tsx"] = "@constructor",
    ["@diff.delta"] = "DiffChange",
    ["@diff.minus"] = "DiffDelete",
    ["@diff.plus"] = "DiffAdd",
    ["@function"] = "Function",
    ["@function.builtin"] = "Special",
    ["@function.macro"] = "Macro",
    ["@function.method"] = "Function",
    ["@function.method.call"] = "@function.method",
    ["@keyword"] = "Keyword",
    ["@keyword.conditional"] = "Conditional",
    ["@keyword.coroutine"] = "@keyword",
    ["@keyword.debug"] = "Debug",
    ["@keyword.directive"] = "PreProc",
    ["@keyword.directive.define"] = "Define",
    ["@keyword.exception"] = "Exception",
    ["@keyword.function"] = "Function",
    ["@keyword.import"] = "Include",
    ["@keyword.operator"] = "@operator",
    ["@keyword.repeat"] = "Repeat",
    ["@keyword.return"] = "@keyword",
    ["@keyword.storage"] = "StorageClass",
    ["@label"] = { fg = c.platinum },
    ["@markup"] = "@none",
    ["@markup.emphasis"] = "Italic",
    ["@markup.environment"] = "Macro",
    ["@markup.environment.name"] = "Type",
    ["@markup.heading"] = "Title",
    ["@markup.italic.markdown_inline"] = { fg = c.munsell, italic = true },
    ["@markup.italic"] = "Italic",
    ["@markup.link"] = { fg = c.teal },
    ["@markup.link.label"] = "SpecialChar",
    ["@markup.link.label.symbol"] = "Identifier",
    ["@markup.link.url"] = "Underlined",
    ["@markup.list"] = "Special",
    ["@markup.list.checked"] = { fg = c.asparagus },
    ["@markup.list.markdown"] = { fg = c.arylide, bold = true },
    ["@markup.list.unchecked"] = { fg = c.mountbatten },
    ["markup.math"] = { fg = c.moonstone },
    ["@markup.raw"] = "String",
    ["@markup.raw.markdown_inline"] = { bg = c.bg_visual, fg = c.munsell },
    ["@markup.strikethrough"] = { strikethrough = true },
    ["@markup.strong.markdown_inline"] = { fg = c.khaki, bold = true },
    ["@markup.strong"] = "Bold",
    ["@module"] = "Include",
    ["@module.builtin"] = { fg = c.teal, italic = true },
    ["@namespace.builtin"] = "@variable.builtin",
    ["@none"] = {},
    ["@number"] = "Number",
    ["@number.float"] = "Float",
    ["@operator"] = { fg = c.vanilla },
    ["@property"] = { fg = c.timberwolf },
    ["@punctuation.bracket"] = { fg = c.timberwolf },
    ["@punctuation.delimiter"] = "Delimiter",
    ["@punctuation.special"] = "Delimiter",
    ["@string"] = "String",
    ["@string.documentation"] = "String",
    ["@string.escape"] = { fg = c.mountbatten },
    ["@string.regexp"] = { fg = c.rose },
    ["@tag"] = { fg = c.citron },
    ["@tag.attribute"] = { fg = c.mountbatten },
    ["@tag.delimiter"] = "Delimiter",
    ["@tag.delimiter.tsx"] = { fg = Util.blend_bg(c.pink, 0.7) },
    ["@tag.tsx"] = { fg = c.old_gold },
    ["@tag.javascript"] = { fg = c.old_gold },
    ["@type"] = "Type",
    ["@type.builtin"] = { fg = Util.blend_bg(c.arylide, 0.8) },
    ["@type.definition"] = "Typedef",
    ["@type.qualifier"] = "@keyword",
    ["@variable"] = { fg = c.pink, style = opts.styles.variables },
    ["@variable.builtin"] = { fg = c.teal },
    ["@variable.member"] = { fg = c.ash },
    ["@variable.parameter"] = { fg = c.flax },
    ["@variable.parameter.builtin"] = { fg = Util.blend_fg(c.flax, 0.8) },

    -- Angular ──────────────────────────────────────────────────────────────────────
    ["@keyword.conditional.angular"] = "@keyword.conditional",
    ["@keyword.repeat.angular"] = "@keyword.repeat",
    ["@punctuation.special.angular"] = "@punctuation.special",
    ["@tag.angular"] = "@tag",
    ["@tag.attribute.angular"] = "@tag.attribute",
    ["@tag.delimiter.angular"] = "@tag.delimiter",
    ["@variable.angular"] = "@variable",
  }

  for i, color in ipairs(c.rainbow) do
    result["@markup.heading." .. i .. ".markdown"] = { fg = color, bold = true }
  end

  return result
end

return M
